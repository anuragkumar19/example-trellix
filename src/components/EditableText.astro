---
interface Props {
    inputLabel: string
    fieldName: string
    value: string
    inputClass: string
    buttonLabel: string
    buttonClass: string
    hxPost: string
    hxTarget: string
    hxSwap: string
    action?: string
}

const {
    buttonClass,
    buttonLabel,
    fieldName,
    inputClass,
    inputLabel,
    value,
    hxPost,
    hxSwap,
    hxTarget,
    action,
} = Astro.props
---

<div
    x-data=`{edit:false,defaultValue:"${value}"}`
    class='editableText'
    x-init=`$watch('edit', () => {
        if(edit){
            setTimeout(() => {
                $el.querySelector('.editable-text-input').focus()
                $el.querySelector('.editable-text-input').select()
            },10)
        }
    })`
>
    <form
        x-show='edit'
        hx-post={hxPost}
        hx-target={hxTarget}
        hx-swap={hxSwap}
        id={`${action}-form`}
    >
        {action && <input type='hidden' name='action' value={action} />}
        <slot />
        <input
            type='text'
            aria-label={inputLabel}
            name={fieldName}
            {value}
            class:list={[inputClass, 'editable-text-input']}
            @keydown.enter='defaultValue=$el.value;$el.blur();htmx.trigger($el.closest("form"),"submit")'
            @keydown.escape={`edit=false;$el.value=defaultValue`}
            @blur={`edit=false;$el.value=defaultValue`}
        />
    </form>
    <button
        x-show='!edit'
        x-text='defaultValue'
        aria-label={buttonLabel}
        type='button'
        @click='edit = true'
        @focus='edit = true'
        class={buttonClass}
    >
        {value || <span class='text-slate-400 italic'>Edit</span>}
    </button>
</div>
